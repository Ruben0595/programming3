1,1586,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[InterPro_accession#222], functions=[])
   +- Exchange hashpartitioning(InterPro_accession#222, 200), ENSURE_REQUIREMENTS, [id=#34]
      +- HashAggregate(keys=[InterPro_accession#222], functions=[])
         +- Project [_c11#27 AS InterPro_accession#222]
            +- Filter (isnotnull(_c11#27) AND NOT (_c11#27 = -))
               +- FileScan csv [_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c11:string>

"
2,5.412269938650307,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[], functions=[avg(count(InterPro_accession)#310L)])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#161]
      +- HashAggregate(keys=[], functions=[partial_avg(count(InterPro_accession)#310L)])
         +- HashAggregate(keys=[Protein_accession#46], functions=[count(InterPro_accession#222)])
            +- Exchange hashpartitioning(Protein_accession#46, 200), ENSURE_REQUIREMENTS, [id=#157]
               +- HashAggregate(keys=[Protein_accession#46], functions=[partial_count(InterPro_accession#222)])
                  +- Project [_c0#16 AS Protein_accession#46, _c11#27 AS InterPro_accession#222]
                     +- Filter (isnotnull(_c11#27) AND NOT (_c11#27 = -))
                        +- FileScan csv [_c0#16,_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c0:string,_c11:string>

"
3,GO:0005524,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#371L DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(count#371L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#260]
      +- HashAggregate(keys=[go_a#337], functions=[count(1)])
         +- Exchange hashpartitioning(go_a#337, 200), ENSURE_REQUIREMENTS, [id=#257]
            +- HashAggregate(keys=[go_a#337], functions=[partial_count(1)])
               +- Generate explode(split(GO_annotations#254, [|], -1)), false, [go_a#337]
                  +- Project [_c13#29 AS GO_annotations#254]
                     +- Filter (isnotnull(_c13#29) AND NOT (_c13#29 = -))
                        +- FileScan csv [_c13#29] Batched: false, DataFilters: [isnotnull(_c13#29), NOT (_c13#29 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c13), Not(EqualTo(_c13,-))], ReadSchema: struct<_c13:string>

"
4,130.9433,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[], functions=[avg(size#377)])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#348]
      +- HashAggregate(keys=[], functions=[partial_avg(size#377)])
         +- Project [(_c7#23 - _c6#22) AS size#377]
            +- FileScan csv [_c6#22,_c7#23] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<_c6:int,_c7:int>

"
5,"['IPR027417', 'IPR002347', 'IPR000182', 'IPR003439', 'IPR004358', 'IPR036259', 'IPR036188', 'IPR036388', 'IPR001789', 'IPR019734']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#439L DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(count#439L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#396]
      +- HashAggregate(keys=[InterPro_accession#222], functions=[count(1)])
         +- Exchange hashpartitioning(InterPro_accession#222, 200), ENSURE_REQUIREMENTS, [id=#393]
            +- HashAggregate(keys=[InterPro_accession#222], functions=[partial_count(1)])
               +- Project [_c11#27 AS InterPro_accession#222]
                  +- Filter (isnotnull(_c11#27) AND NOT (_c11#27 = -))
                     +- FileScan csv [_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c11:string>

"
6,"['IPR014140', 'IPR012300', 'IPR024712', 'IPR005855', 'IPR005855', 'IPR014140', 'IPR005930', 'IPR023717', 'IPR023717', 'IPR004623']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [size#462 DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(size#462 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#469]
      +- Project [_c0#16 AS Protein_accession#46, _c1#17 AS MD5#62, _c2#18 AS Seq_len#78, _c3#19 AS Analysis#94, _c4#20 AS Signature_accession#110, _c5#21 AS Signature_description#126, _c6#22 AS Start#142, _c7#23 AS Stop#158, _c8#24 AS Score#174, _c9#25 AS Status#190, _c10#26 AS Date#206, _c11#27 AS InterPro_accession#222, _c12#28 AS InterPro_description#238, _c13#29 AS GO_annotations#254, _c14#30 AS Pathways#270, (_c7#23 - _c6#22) AS size_ipf#445, (cast((_c7#23 - _c6#22) as double) / cast(_c2#18 as double)) AS size#462]
         +- Filter (((((isnotnull(_c11#27) AND isnotnull(_c7#23)) AND isnotnull(_c6#22)) AND isnotnull(_c2#18)) AND NOT (_c11#27 = -)) AND ((cast((_c7#23 - _c6#22) as double) / cast(_c2#18 as double)) > 0.9))
            +- FileScan csv [_c0#16,_c1#17,_c2#18,_c3#19,_c4#20,_c5#21,_c6#22,_c7#23,_c8#24,_c9#25,_c10#26,_c11#27,_c12#28,_c13#29,_c14#30] Batched: false, DataFilters: [isnotnull(_c11#27), isnotnull(_c7#23), isnotnull(_c6#22), isnotnull(_c2#18), NOT (_c11#27 = -), ..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), IsNotNull(_c7), IsNotNull(_c6), IsNotNull(_c2), Not(EqualTo(_c11,-))], ReadSchema: struct<_c0:string,_c1:string,_c2:int,_c3:string,_c4:string,_c5:string,_c6:int,_c7:int,_c8:string,...

"
7,"['domain', 'superfamily', 'protein', 'C-terminal', 'hydrolase', 'DNA-binding', 'site', 'family', 'N-terminal', 'conserved']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#530L DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(count#530L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#512]
      +- HashAggregate(keys=[desc#496], functions=[count(1)])
         +- Exchange hashpartitioning(desc#496, 200), ENSURE_REQUIREMENTS, [id=#509]
            +- HashAggregate(keys=[desc#496], functions=[partial_count(1)])
               +- Generate explode(split(InterPro_description#238,  , -1)), false, [desc#496]
                  +- Project [_c12#28 AS InterPro_description#238]
                     +- Filter (isnotnull(_c12#28) AND NOT (_c12#28 = -))
                        +- FileScan csv [_c12#28] Batched: false, DataFilters: [isnotnull(_c12#28), NOT (_c12#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c12), Not(EqualTo(_c12,-))], ReadSchema: struct<_c12:string>

"
8,"['DUF5519', 'quinoprotein', 'formyltransferase,', 'hydratase', 'CdaR,', 'RecG', 'IucA/IucC-like', 'two', 'Carbohydrate-binding-like', 'DEAD/DEAH']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#530L DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(count#530L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#512]
      +- HashAggregate(keys=[desc#496], functions=[count(1)])
         +- Exchange hashpartitioning(desc#496, 200), ENSURE_REQUIREMENTS, [id=#509]
            +- HashAggregate(keys=[desc#496], functions=[partial_count(1)])
               +- Generate explode(split(InterPro_description#238,  , -1)), false, [desc#496]
                  +- Project [_c12#28 AS InterPro_description#238]
                     +- Filter (isnotnull(_c12#28) AND NOT (_c12#28 = -))
                        +- FileScan csv [_c12#28] Batched: false, DataFilters: [isnotnull(_c12#28), NOT (_c12#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c12), Not(EqualTo(_c12,-))], ReadSchema: struct<_c12:string>

"
9,"['superfamily', 'protein', 'domain', 'Ribosomal', 'family', 'transporter', 'synthase', 'subunit', 'hydrolase', 'Protein']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#651L DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(count#651L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#690]
      +- HashAggregate(keys=[desc#613], functions=[count(1)])
         +- Exchange hashpartitioning(desc#613, 200), ENSURE_REQUIREMENTS, [id=#687]
            +- HashAggregate(keys=[desc#613], functions=[partial_count(1)])
               +- Generate explode(split(InterPro_description#238,  , -1)), false, [desc#613]
                  +- Project [InterPro_description#238]
                     +- Sort [size#594 DESC NULLS LAST], true, 0
                        +- Exchange rangepartitioning(size#594 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#681]
                           +- Project [_c12#28 AS InterPro_description#238, (cast((_c7#23 - _c6#22) as double) / cast(_c2#18 as double)) AS size#594]
                              +- Filter (((((isnotnull(_c11#27) AND isnotnull(_c7#23)) AND isnotnull(_c6#22)) AND isnotnull(_c2#18)) AND NOT (_c11#27 = -)) AND ((cast((_c7#23 - _c6#22) as double) / cast(_c2#18 as double)) > 0.9))
                                 +- FileScan csv [_c2#18,_c6#22,_c7#23,_c11#27,_c12#28] Batched: false, DataFilters: [isnotnull(_c11#27), isnotnull(_c7#23), isnotnull(_c6#22), isnotnull(_c2#18), NOT (_c11#27 = -), ..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), IsNotNull(_c7), IsNotNull(_c6), IsNotNull(_c2), Not(EqualTo(_c11,-))], ReadSchema: struct<_c2:int,_c6:int,_c7:int,_c11:string,_c12:string>

"
10,0.34070027414528353,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[Protein_accession#46, Seq_len#78], functions=[count(1)])
   +- Exchange hashpartitioning(Protein_accession#46, Seq_len#78, 200), ENSURE_REQUIREMENTS, [id=#853]
      +- HashAggregate(keys=[Protein_accession#46, Seq_len#78], functions=[partial_count(1)])
         +- Project [_c0#16 AS Protein_accession#46, _c2#18 AS Seq_len#78]
            +- Filter (isnotnull(_c11#27) AND NOT (_c11#27 = -))
               +- FileScan csv [_c0#16,_c2#18,_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/homes/rotter/Desktop/sm-all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c0:string,_c2:int,_c11:string>

"
